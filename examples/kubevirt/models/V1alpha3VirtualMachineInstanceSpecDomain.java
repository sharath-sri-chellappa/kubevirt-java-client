/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.kubevirt.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Specification of the desired behavior of the VirtualMachineInstance on the host.
 */
@ApiModel(description = "Specification of the desired behavior of the VirtualMachineInstance on the host.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-29T01:55:00.032Z[Etc/UTC]")
public class V1alpha3VirtualMachineInstanceSpecDomain {
  public static final String SERIALIZED_NAME_CHASSIS = "chassis";
  @SerializedName(SERIALIZED_NAME_CHASSIS)
  private V1alpha3VirtualMachineInstanceSpecDomainChassis chassis;

  public static final String SERIALIZED_NAME_CLOCK = "clock";
  @SerializedName(SERIALIZED_NAME_CLOCK)
  private V1alpha3VirtualMachineInstanceSpecDomainClock clock;

  public static final String SERIALIZED_NAME_CPU = "cpu";
  @SerializedName(SERIALIZED_NAME_CPU)
  private V1alpha3VirtualMachineInstanceSpecDomainCpu cpu;

  public static final String SERIALIZED_NAME_DEVICES = "devices";
  @SerializedName(SERIALIZED_NAME_DEVICES)
  private V1alpha3VirtualMachineInstanceSpecDomainDevices devices;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private V1alpha3VirtualMachineInstanceSpecDomainFeatures features;

  public static final String SERIALIZED_NAME_FIRMWARE = "firmware";
  @SerializedName(SERIALIZED_NAME_FIRMWARE)
  private V1alpha3VirtualMachineInstanceSpecDomainFirmware firmware;

  public static final String SERIALIZED_NAME_IO_THREADS_POLICY = "ioThreadsPolicy";
  @SerializedName(SERIALIZED_NAME_IO_THREADS_POLICY)
  private String ioThreadsPolicy;

  public static final String SERIALIZED_NAME_MACHINE = "machine";
  @SerializedName(SERIALIZED_NAME_MACHINE)
  private V1alpha3VirtualMachineInstanceSpecDomainMachine machine;

  public static final String SERIALIZED_NAME_MEMORY = "memory";
  @SerializedName(SERIALIZED_NAME_MEMORY)
  private V1alpha3VirtualMachineInstanceSpecDomainMemory memory;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private V1alpha3VirtualMachineInstanceSpecDomainResources resources;


  public V1alpha3VirtualMachineInstanceSpecDomain chassis(V1alpha3VirtualMachineInstanceSpecDomainChassis chassis) {
    
    this.chassis = chassis;
    return this;
  }

   /**
   * Get chassis
   * @return chassis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainChassis getChassis() {
    return chassis;
  }


  public void setChassis(V1alpha3VirtualMachineInstanceSpecDomainChassis chassis) {
    this.chassis = chassis;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain clock(V1alpha3VirtualMachineInstanceSpecDomainClock clock) {
    
    this.clock = clock;
    return this;
  }

   /**
   * Get clock
   * @return clock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainClock getClock() {
    return clock;
  }


  public void setClock(V1alpha3VirtualMachineInstanceSpecDomainClock clock) {
    this.clock = clock;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain cpu(V1alpha3VirtualMachineInstanceSpecDomainCpu cpu) {
    
    this.cpu = cpu;
    return this;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainCpu getCpu() {
    return cpu;
  }


  public void setCpu(V1alpha3VirtualMachineInstanceSpecDomainCpu cpu) {
    this.cpu = cpu;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain devices(V1alpha3VirtualMachineInstanceSpecDomainDevices devices) {
    
    this.devices = devices;
    return this;
  }

   /**
   * Get devices
   * @return devices
  **/
  @ApiModelProperty(required = true, value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainDevices getDevices() {
    return devices;
  }


  public void setDevices(V1alpha3VirtualMachineInstanceSpecDomainDevices devices) {
    this.devices = devices;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain features(V1alpha3VirtualMachineInstanceSpecDomainFeatures features) {
    
    this.features = features;
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainFeatures getFeatures() {
    return features;
  }


  public void setFeatures(V1alpha3VirtualMachineInstanceSpecDomainFeatures features) {
    this.features = features;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain firmware(V1alpha3VirtualMachineInstanceSpecDomainFirmware firmware) {
    
    this.firmware = firmware;
    return this;
  }

   /**
   * Get firmware
   * @return firmware
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainFirmware getFirmware() {
    return firmware;
  }


  public void setFirmware(V1alpha3VirtualMachineInstanceSpecDomainFirmware firmware) {
    this.firmware = firmware;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain ioThreadsPolicy(String ioThreadsPolicy) {
    
    this.ioThreadsPolicy = ioThreadsPolicy;
    return this;
  }

   /**
   * Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto
   * @return ioThreadsPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto")

  public String getIoThreadsPolicy() {
    return ioThreadsPolicy;
  }


  public void setIoThreadsPolicy(String ioThreadsPolicy) {
    this.ioThreadsPolicy = ioThreadsPolicy;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain machine(V1alpha3VirtualMachineInstanceSpecDomainMachine machine) {
    
    this.machine = machine;
    return this;
  }

   /**
   * Get machine
   * @return machine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainMachine getMachine() {
    return machine;
  }


  public void setMachine(V1alpha3VirtualMachineInstanceSpecDomainMachine machine) {
    this.machine = machine;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain memory(V1alpha3VirtualMachineInstanceSpecDomainMemory memory) {
    
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainMemory getMemory() {
    return memory;
  }


  public void setMemory(V1alpha3VirtualMachineInstanceSpecDomainMemory memory) {
    this.memory = memory;
  }


  public V1alpha3VirtualMachineInstanceSpecDomain resources(V1alpha3VirtualMachineInstanceSpecDomainResources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDomainResources getResources() {
    return resources;
  }


  public void setResources(V1alpha3VirtualMachineInstanceSpecDomainResources resources) {
    this.resources = resources;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha3VirtualMachineInstanceSpecDomain v1alpha3VirtualMachineInstanceSpecDomain = (V1alpha3VirtualMachineInstanceSpecDomain) o;
    return Objects.equals(this.chassis, v1alpha3VirtualMachineInstanceSpecDomain.chassis) &&
        Objects.equals(this.clock, v1alpha3VirtualMachineInstanceSpecDomain.clock) &&
        Objects.equals(this.cpu, v1alpha3VirtualMachineInstanceSpecDomain.cpu) &&
        Objects.equals(this.devices, v1alpha3VirtualMachineInstanceSpecDomain.devices) &&
        Objects.equals(this.features, v1alpha3VirtualMachineInstanceSpecDomain.features) &&
        Objects.equals(this.firmware, v1alpha3VirtualMachineInstanceSpecDomain.firmware) &&
        Objects.equals(this.ioThreadsPolicy, v1alpha3VirtualMachineInstanceSpecDomain.ioThreadsPolicy) &&
        Objects.equals(this.machine, v1alpha3VirtualMachineInstanceSpecDomain.machine) &&
        Objects.equals(this.memory, v1alpha3VirtualMachineInstanceSpecDomain.memory) &&
        Objects.equals(this.resources, v1alpha3VirtualMachineInstanceSpecDomain.resources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chassis, clock, cpu, devices, features, firmware, ioThreadsPolicy, machine, memory, resources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha3VirtualMachineInstanceSpecDomain {\n");
    sb.append("    chassis: ").append(toIndentedString(chassis)).append("\n");
    sb.append("    clock: ").append(toIndentedString(clock)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    firmware: ").append(toIndentedString(firmware)).append("\n");
    sb.append("    ioThreadsPolicy: ").append(toIndentedString(ioThreadsPolicy)).append("\n");
    sb.append("    machine: ").append(toIndentedString(machine)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

