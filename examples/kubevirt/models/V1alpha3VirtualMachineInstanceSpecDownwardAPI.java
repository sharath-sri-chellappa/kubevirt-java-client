/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.kubevirt.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * DownwardAPI represents downward API about the pod that should populate this volume
 */
@ApiModel(description = "DownwardAPI represents downward API about the pod that should populate this volume")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-29T01:55:00.032Z[Etc/UTC]")
public class V1alpha3VirtualMachineInstanceSpecDownwardAPI {
  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<V1alpha3VirtualMachineInstanceSpecDownwardAPIFields> fields = null;

  public static final String SERIALIZED_NAME_VOLUME_LABEL = "volumeLabel";
  @SerializedName(SERIALIZED_NAME_VOLUME_LABEL)
  private String volumeLabel;


  public V1alpha3VirtualMachineInstanceSpecDownwardAPI fields(List<V1alpha3VirtualMachineInstanceSpecDownwardAPIFields> fields) {
    
    this.fields = fields;
    return this;
  }

  public V1alpha3VirtualMachineInstanceSpecDownwardAPI addFieldsItem(V1alpha3VirtualMachineInstanceSpecDownwardAPIFields fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Fields is a list of downward API volume file
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fields is a list of downward API volume file")

  public List<V1alpha3VirtualMachineInstanceSpecDownwardAPIFields> getFields() {
    return fields;
  }


  public void setFields(List<V1alpha3VirtualMachineInstanceSpecDownwardAPIFields> fields) {
    this.fields = fields;
  }


  public V1alpha3VirtualMachineInstanceSpecDownwardAPI volumeLabel(String volumeLabel) {
    
    this.volumeLabel = volumeLabel;
    return this;
  }

   /**
   * The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \&quot;cidata\&quot; (cloud-init), \&quot;config-2\&quot; (cloud-init) or \&quot;OEMDRV\&quot; (kickstart).
   * @return volumeLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).")

  public String getVolumeLabel() {
    return volumeLabel;
  }


  public void setVolumeLabel(String volumeLabel) {
    this.volumeLabel = volumeLabel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha3VirtualMachineInstanceSpecDownwardAPI v1alpha3VirtualMachineInstanceSpecDownwardAPI = (V1alpha3VirtualMachineInstanceSpecDownwardAPI) o;
    return Objects.equals(this.fields, v1alpha3VirtualMachineInstanceSpecDownwardAPI.fields) &&
        Objects.equals(this.volumeLabel, v1alpha3VirtualMachineInstanceSpecDownwardAPI.volumeLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fields, volumeLabel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha3VirtualMachineInstanceSpecDownwardAPI {\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    volumeLabel: ").append(toIndentedString(volumeLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

