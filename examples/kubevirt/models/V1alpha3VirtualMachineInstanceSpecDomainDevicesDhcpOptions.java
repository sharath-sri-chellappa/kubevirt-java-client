/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.kubevirt.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * If specified the network interface will pass additional DHCP options to the VMI
 */
@ApiModel(description = "If specified the network interface will pass additional DHCP options to the VMI")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-29T01:55:00.032Z[Etc/UTC]")
public class V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions {
  public static final String SERIALIZED_NAME_BOOT_FILE_NAME = "bootFileName";
  @SerializedName(SERIALIZED_NAME_BOOT_FILE_NAME)
  private String bootFileName;

  public static final String SERIALIZED_NAME_NTP_SERVERS = "ntpServers";
  @SerializedName(SERIALIZED_NAME_NTP_SERVERS)
  private List<String> ntpServers = null;

  public static final String SERIALIZED_NAME_PRIVATE_OPTIONS = "privateOptions";
  @SerializedName(SERIALIZED_NAME_PRIVATE_OPTIONS)
  private List<V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptionsPrivateOptions> privateOptions = null;

  public static final String SERIALIZED_NAME_TFTP_SERVER_NAME = "tftpServerName";
  @SerializedName(SERIALIZED_NAME_TFTP_SERVER_NAME)
  private String tftpServerName;


  public V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions bootFileName(String bootFileName) {
    
    this.bootFileName = bootFileName;
    return this;
  }

   /**
   * If specified will pass option 67 to interface&#39;s DHCP server
   * @return bootFileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified will pass option 67 to interface's DHCP server")

  public String getBootFileName() {
    return bootFileName;
  }


  public void setBootFileName(String bootFileName) {
    this.bootFileName = bootFileName;
  }


  public V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions ntpServers(List<String> ntpServers) {
    
    this.ntpServers = ntpServers;
    return this;
  }

  public V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions addNtpServersItem(String ntpServersItem) {
    if (this.ntpServers == null) {
      this.ntpServers = new ArrayList<>();
    }
    this.ntpServers.add(ntpServersItem);
    return this;
  }

   /**
   * If specified will pass the configured NTP server to the VM via DHCP option 042.
   * @return ntpServers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified will pass the configured NTP server to the VM via DHCP option 042.")

  public List<String> getNtpServers() {
    return ntpServers;
  }


  public void setNtpServers(List<String> ntpServers) {
    this.ntpServers = ntpServers;
  }


  public V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions privateOptions(List<V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptionsPrivateOptions> privateOptions) {
    
    this.privateOptions = privateOptions;
    return this;
  }

  public V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions addPrivateOptionsItem(V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptionsPrivateOptions privateOptionsItem) {
    if (this.privateOptions == null) {
      this.privateOptions = new ArrayList<>();
    }
    this.privateOptions.add(privateOptionsItem);
    return this;
  }

   /**
   * If specified will pass extra DHCP options for private use, range: 224-254
   * @return privateOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified will pass extra DHCP options for private use, range: 224-254")

  public List<V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptionsPrivateOptions> getPrivateOptions() {
    return privateOptions;
  }


  public void setPrivateOptions(List<V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptionsPrivateOptions> privateOptions) {
    this.privateOptions = privateOptions;
  }


  public V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions tftpServerName(String tftpServerName) {
    
    this.tftpServerName = tftpServerName;
    return this;
  }

   /**
   * If specified will pass option 66 to interface&#39;s DHCP server
   * @return tftpServerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified will pass option 66 to interface's DHCP server")

  public String getTftpServerName() {
    return tftpServerName;
  }


  public void setTftpServerName(String tftpServerName) {
    this.tftpServerName = tftpServerName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions v1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions = (V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions) o;
    return Objects.equals(this.bootFileName, v1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions.bootFileName) &&
        Objects.equals(this.ntpServers, v1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions.ntpServers) &&
        Objects.equals(this.privateOptions, v1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions.privateOptions) &&
        Objects.equals(this.tftpServerName, v1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions.tftpServerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bootFileName, ntpServers, privateOptions, tftpServerName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha3VirtualMachineInstanceSpecDomainDevicesDhcpOptions {\n");
    sb.append("    bootFileName: ").append(toIndentedString(bootFileName)).append("\n");
    sb.append("    ntpServers: ").append(toIndentedString(ntpServers)).append("\n");
    sb.append("    privateOptions: ").append(toIndentedString(privateOptions)).append("\n");
    sb.append("    tftpServerName: ").append(toIndentedString(tftpServerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

