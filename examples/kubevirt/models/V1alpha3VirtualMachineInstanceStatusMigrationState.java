/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.kubevirt.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;

/**
 * Represents the status of a live migration
 */
@ApiModel(description = "Represents the status of a live migration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-29T01:55:00.032Z[Etc/UTC]")
public class V1alpha3VirtualMachineInstanceStatusMigrationState {
  public static final String SERIALIZED_NAME_ABORT_REQUESTED = "abortRequested";
  @SerializedName(SERIALIZED_NAME_ABORT_REQUESTED)
  private Boolean abortRequested;

  public static final String SERIALIZED_NAME_ABORT_STATUS = "abortStatus";
  @SerializedName(SERIALIZED_NAME_ABORT_STATUS)
  private String abortStatus;

  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private Boolean completed;

  public static final String SERIALIZED_NAME_END_TIMESTAMP = "endTimestamp";
  @SerializedName(SERIALIZED_NAME_END_TIMESTAMP)
  private Object endTimestamp;

  public static final String SERIALIZED_NAME_FAILED = "failed";
  @SerializedName(SERIALIZED_NAME_FAILED)
  private Boolean failed;

  public static final String SERIALIZED_NAME_MIGRATION_UID = "migrationUid";
  @SerializedName(SERIALIZED_NAME_MIGRATION_UID)
  private String migrationUid;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private String mode;

  public static final String SERIALIZED_NAME_SOURCE_NODE = "sourceNode";
  @SerializedName(SERIALIZED_NAME_SOURCE_NODE)
  private String sourceNode;

  public static final String SERIALIZED_NAME_START_TIMESTAMP = "startTimestamp";
  @SerializedName(SERIALIZED_NAME_START_TIMESTAMP)
  private Object startTimestamp;

  public static final String SERIALIZED_NAME_TARGET_DIRECT_MIGRATION_NODE_PORTS = "targetDirectMigrationNodePorts";
  @SerializedName(SERIALIZED_NAME_TARGET_DIRECT_MIGRATION_NODE_PORTS)
  private Map<String, Integer> targetDirectMigrationNodePorts = null;

  public static final String SERIALIZED_NAME_TARGET_NODE = "targetNode";
  @SerializedName(SERIALIZED_NAME_TARGET_NODE)
  private String targetNode;

  public static final String SERIALIZED_NAME_TARGET_NODE_ADDRESS = "targetNodeAddress";
  @SerializedName(SERIALIZED_NAME_TARGET_NODE_ADDRESS)
  private String targetNodeAddress;

  public static final String SERIALIZED_NAME_TARGET_NODE_DOMAIN_DETECTED = "targetNodeDomainDetected";
  @SerializedName(SERIALIZED_NAME_TARGET_NODE_DOMAIN_DETECTED)
  private Boolean targetNodeDomainDetected;

  public static final String SERIALIZED_NAME_TARGET_POD = "targetPod";
  @SerializedName(SERIALIZED_NAME_TARGET_POD)
  private String targetPod;


  public V1alpha3VirtualMachineInstanceStatusMigrationState abortRequested(Boolean abortRequested) {
    
    this.abortRequested = abortRequested;
    return this;
  }

   /**
   * Indicates that the migration has been requested to abort
   * @return abortRequested
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that the migration has been requested to abort")

  public Boolean getAbortRequested() {
    return abortRequested;
  }


  public void setAbortRequested(Boolean abortRequested) {
    this.abortRequested = abortRequested;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState abortStatus(String abortStatus) {
    
    this.abortStatus = abortStatus;
    return this;
  }

   /**
   * Indicates the final status of the live migration abortion
   * @return abortStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the final status of the live migration abortion")

  public String getAbortStatus() {
    return abortStatus;
  }


  public void setAbortStatus(String abortStatus) {
    this.abortStatus = abortStatus;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState completed(Boolean completed) {
    
    this.completed = completed;
    return this;
  }

   /**
   * Indicates the migration completed
   * @return completed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the migration completed")

  public Boolean getCompleted() {
    return completed;
  }


  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState endTimestamp(Object endTimestamp) {
    
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * The time the migration action ended
   * @return endTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time the migration action ended")

  public Object getEndTimestamp() {
    return endTimestamp;
  }


  public void setEndTimestamp(Object endTimestamp) {
    this.endTimestamp = endTimestamp;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState failed(Boolean failed) {
    
    this.failed = failed;
    return this;
  }

   /**
   * Indicates that the migration failed
   * @return failed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that the migration failed")

  public Boolean getFailed() {
    return failed;
  }


  public void setFailed(Boolean failed) {
    this.failed = failed;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState migrationUid(String migrationUid) {
    
    this.migrationUid = migrationUid;
    return this;
  }

   /**
   * The VirtualMachineInstanceMigration object associated with this migration
   * @return migrationUid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The VirtualMachineInstanceMigration object associated with this migration")

  public String getMigrationUid() {
    return migrationUid;
  }


  public void setMigrationUid(String migrationUid) {
    this.migrationUid = migrationUid;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState mode(String mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * Lets us know if the vmi is currenly running pre or post copy migration
   * @return mode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lets us know if the vmi is currenly running pre or post copy migration")

  public String getMode() {
    return mode;
  }


  public void setMode(String mode) {
    this.mode = mode;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState sourceNode(String sourceNode) {
    
    this.sourceNode = sourceNode;
    return this;
  }

   /**
   * The source node that the VMI originated on
   * @return sourceNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The source node that the VMI originated on")

  public String getSourceNode() {
    return sourceNode;
  }


  public void setSourceNode(String sourceNode) {
    this.sourceNode = sourceNode;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState startTimestamp(Object startTimestamp) {
    
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * The time the migration action began
   * @return startTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time the migration action began")

  public Object getStartTimestamp() {
    return startTimestamp;
  }


  public void setStartTimestamp(Object startTimestamp) {
    this.startTimestamp = startTimestamp;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState targetDirectMigrationNodePorts(Map<String, Integer> targetDirectMigrationNodePorts) {
    
    this.targetDirectMigrationNodePorts = targetDirectMigrationNodePorts;
    return this;
  }

  public V1alpha3VirtualMachineInstanceStatusMigrationState putTargetDirectMigrationNodePortsItem(String key, Integer targetDirectMigrationNodePortsItem) {
    if (this.targetDirectMigrationNodePorts == null) {
      this.targetDirectMigrationNodePorts = new HashMap<>();
    }
    this.targetDirectMigrationNodePorts.put(key, targetDirectMigrationNodePortsItem);
    return this;
  }

   /**
   * The list of ports opened for live migration on the destination node
   * @return targetDirectMigrationNodePorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of ports opened for live migration on the destination node")

  public Map<String, Integer> getTargetDirectMigrationNodePorts() {
    return targetDirectMigrationNodePorts;
  }


  public void setTargetDirectMigrationNodePorts(Map<String, Integer> targetDirectMigrationNodePorts) {
    this.targetDirectMigrationNodePorts = targetDirectMigrationNodePorts;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState targetNode(String targetNode) {
    
    this.targetNode = targetNode;
    return this;
  }

   /**
   * The target node that the VMI is moving to
   * @return targetNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target node that the VMI is moving to")

  public String getTargetNode() {
    return targetNode;
  }


  public void setTargetNode(String targetNode) {
    this.targetNode = targetNode;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState targetNodeAddress(String targetNodeAddress) {
    
    this.targetNodeAddress = targetNodeAddress;
    return this;
  }

   /**
   * The address of the target node to use for the migration
   * @return targetNodeAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The address of the target node to use for the migration")

  public String getTargetNodeAddress() {
    return targetNodeAddress;
  }


  public void setTargetNodeAddress(String targetNodeAddress) {
    this.targetNodeAddress = targetNodeAddress;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState targetNodeDomainDetected(Boolean targetNodeDomainDetected) {
    
    this.targetNodeDomainDetected = targetNodeDomainDetected;
    return this;
  }

   /**
   * The Target Node has seen the Domain Start Event
   * @return targetNodeDomainDetected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Target Node has seen the Domain Start Event")

  public Boolean getTargetNodeDomainDetected() {
    return targetNodeDomainDetected;
  }


  public void setTargetNodeDomainDetected(Boolean targetNodeDomainDetected) {
    this.targetNodeDomainDetected = targetNodeDomainDetected;
  }


  public V1alpha3VirtualMachineInstanceStatusMigrationState targetPod(String targetPod) {
    
    this.targetPod = targetPod;
    return this;
  }

   /**
   * The target pod that the VMI is moving to
   * @return targetPod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target pod that the VMI is moving to")

  public String getTargetPod() {
    return targetPod;
  }


  public void setTargetPod(String targetPod) {
    this.targetPod = targetPod;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha3VirtualMachineInstanceStatusMigrationState v1alpha3VirtualMachineInstanceStatusMigrationState = (V1alpha3VirtualMachineInstanceStatusMigrationState) o;
    return Objects.equals(this.abortRequested, v1alpha3VirtualMachineInstanceStatusMigrationState.abortRequested) &&
        Objects.equals(this.abortStatus, v1alpha3VirtualMachineInstanceStatusMigrationState.abortStatus) &&
        Objects.equals(this.completed, v1alpha3VirtualMachineInstanceStatusMigrationState.completed) &&
        Objects.equals(this.endTimestamp, v1alpha3VirtualMachineInstanceStatusMigrationState.endTimestamp) &&
        Objects.equals(this.failed, v1alpha3VirtualMachineInstanceStatusMigrationState.failed) &&
        Objects.equals(this.migrationUid, v1alpha3VirtualMachineInstanceStatusMigrationState.migrationUid) &&
        Objects.equals(this.mode, v1alpha3VirtualMachineInstanceStatusMigrationState.mode) &&
        Objects.equals(this.sourceNode, v1alpha3VirtualMachineInstanceStatusMigrationState.sourceNode) &&
        Objects.equals(this.startTimestamp, v1alpha3VirtualMachineInstanceStatusMigrationState.startTimestamp) &&
        Objects.equals(this.targetDirectMigrationNodePorts, v1alpha3VirtualMachineInstanceStatusMigrationState.targetDirectMigrationNodePorts) &&
        Objects.equals(this.targetNode, v1alpha3VirtualMachineInstanceStatusMigrationState.targetNode) &&
        Objects.equals(this.targetNodeAddress, v1alpha3VirtualMachineInstanceStatusMigrationState.targetNodeAddress) &&
        Objects.equals(this.targetNodeDomainDetected, v1alpha3VirtualMachineInstanceStatusMigrationState.targetNodeDomainDetected) &&
        Objects.equals(this.targetPod, v1alpha3VirtualMachineInstanceStatusMigrationState.targetPod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abortRequested, abortStatus, completed, endTimestamp, failed, migrationUid, mode, sourceNode, startTimestamp, targetDirectMigrationNodePorts, targetNode, targetNodeAddress, targetNodeDomainDetected, targetPod);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha3VirtualMachineInstanceStatusMigrationState {\n");
    sb.append("    abortRequested: ").append(toIndentedString(abortRequested)).append("\n");
    sb.append("    abortStatus: ").append(toIndentedString(abortStatus)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    migrationUid: ").append(toIndentedString(migrationUid)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    sourceNode: ").append(toIndentedString(sourceNode)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    targetDirectMigrationNodePorts: ").append(toIndentedString(targetDirectMigrationNodePorts)).append("\n");
    sb.append("    targetNode: ").append(toIndentedString(targetNode)).append("\n");
    sb.append("    targetNodeAddress: ").append(toIndentedString(targetNodeAddress)).append("\n");
    sb.append("    targetNodeDomainDetected: ").append(toIndentedString(targetNodeDomainDetected)).append("\n");
    sb.append("    targetPod: ").append(toIndentedString(targetPod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

