/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.kubevirt.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * VirtualMachineInstance Spec contains the VirtualMachineInstance specification.
 */
@ApiModel(description = "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-29T01:55:00.032Z[Etc/UTC]")
public class V1alpha3VirtualMachineInstanceSpec {
  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private V1alpha3VirtualMachineInstanceSpecAffinity affinity;

  public static final String SERIALIZED_NAME_DNS_CONFIG = "dnsConfig";
  @SerializedName(SERIALIZED_NAME_DNS_CONFIG)
  private V1alpha3VirtualMachineInstanceSpecDnsConfig dnsConfig;

  public static final String SERIALIZED_NAME_DNS_POLICY = "dnsPolicy";
  @SerializedName(SERIALIZED_NAME_DNS_POLICY)
  private String dnsPolicy;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private V1alpha3VirtualMachineInstanceSpecDomain domain;

  public static final String SERIALIZED_NAME_EVICTION_STRATEGY = "evictionStrategy";
  @SerializedName(SERIALIZED_NAME_EVICTION_STRATEGY)
  private String evictionStrategy;

  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_LIVENESS_PROBE = "livenessProbe";
  @SerializedName(SERIALIZED_NAME_LIVENESS_PROBE)
  private V1alpha3VirtualMachineInstanceSpecLivenessProbe livenessProbe;

  public static final String SERIALIZED_NAME_NETWORKS = "networks";
  @SerializedName(SERIALIZED_NAME_NETWORKS)
  private List<V1alpha3VirtualMachineInstanceSpecNetworks> networks = null;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  private Map<String, String> nodeSelector = null;

  public static final String SERIALIZED_NAME_PRIORITY_CLASS_NAME = "priorityClassName";
  @SerializedName(SERIALIZED_NAME_PRIORITY_CLASS_NAME)
  private String priorityClassName;

  public static final String SERIALIZED_NAME_READINESS_PROBE = "readinessProbe";
  @SerializedName(SERIALIZED_NAME_READINESS_PROBE)
  private V1alpha3VirtualMachineInstanceSpecReadinessProbe readinessProbe;

  public static final String SERIALIZED_NAME_SCHEDULER_NAME = "schedulerName";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_NAME)
  private String schedulerName;

  public static final String SERIALIZED_NAME_SUBDOMAIN = "subdomain";
  @SerializedName(SERIALIZED_NAME_SUBDOMAIN)
  private String subdomain;

  public static final String SERIALIZED_NAME_TERMINATION_GRACE_PERIOD_SECONDS = "terminationGracePeriodSeconds";
  @SerializedName(SERIALIZED_NAME_TERMINATION_GRACE_PERIOD_SECONDS)
  private Long terminationGracePeriodSeconds;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private List<V1alpha3VirtualMachineInstanceSpecTolerations> tolerations = null;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<V1alpha3VirtualMachineInstanceSpecVolumes> volumes = null;


  public V1alpha3VirtualMachineInstanceSpec affinity(V1alpha3VirtualMachineInstanceSpecAffinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecAffinity getAffinity() {
    return affinity;
  }


  public void setAffinity(V1alpha3VirtualMachineInstanceSpecAffinity affinity) {
    this.affinity = affinity;
  }


  public V1alpha3VirtualMachineInstanceSpec dnsConfig(V1alpha3VirtualMachineInstanceSpecDnsConfig dnsConfig) {
    
    this.dnsConfig = dnsConfig;
    return this;
  }

   /**
   * Get dnsConfig
   * @return dnsConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecDnsConfig getDnsConfig() {
    return dnsConfig;
  }


  public void setDnsConfig(V1alpha3VirtualMachineInstanceSpecDnsConfig dnsConfig) {
    this.dnsConfig = dnsConfig;
  }


  public V1alpha3VirtualMachineInstanceSpec dnsPolicy(String dnsPolicy) {
    
    this.dnsPolicy = dnsPolicy;
    return this;
  }

   /**
   * Set DNS policy for the pod. Defaults to \&quot;ClusterFirst\&quot;. Valid values are &#39;ClusterFirstWithHostNet&#39;, &#39;ClusterFirst&#39;, &#39;Default&#39; or &#39;None&#39;. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to &#39;ClusterFirstWithHostNet&#39;.
   * @return dnsPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.")

  public String getDnsPolicy() {
    return dnsPolicy;
  }


  public void setDnsPolicy(String dnsPolicy) {
    this.dnsPolicy = dnsPolicy;
  }


  public V1alpha3VirtualMachineInstanceSpec domain(V1alpha3VirtualMachineInstanceSpecDomain domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @ApiModelProperty(required = true, value = "")

  public V1alpha3VirtualMachineInstanceSpecDomain getDomain() {
    return domain;
  }


  public void setDomain(V1alpha3VirtualMachineInstanceSpecDomain domain) {
    this.domain = domain;
  }


  public V1alpha3VirtualMachineInstanceSpec evictionStrategy(String evictionStrategy) {
    
    this.evictionStrategy = evictionStrategy;
    return this;
  }

   /**
   * EvictionStrategy can be set to \&quot;LiveMigrate\&quot; if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain.
   * @return evictionStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EvictionStrategy can be set to \"LiveMigrate\" if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain.")

  public String getEvictionStrategy() {
    return evictionStrategy;
  }


  public void setEvictionStrategy(String evictionStrategy) {
    this.evictionStrategy = evictionStrategy;
  }


  public V1alpha3VirtualMachineInstanceSpec hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * Specifies the hostname of the vmi If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the hostname of the vmi If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.")

  public String getHostname() {
    return hostname;
  }


  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public V1alpha3VirtualMachineInstanceSpec livenessProbe(V1alpha3VirtualMachineInstanceSpecLivenessProbe livenessProbe) {
    
    this.livenessProbe = livenessProbe;
    return this;
  }

   /**
   * Get livenessProbe
   * @return livenessProbe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecLivenessProbe getLivenessProbe() {
    return livenessProbe;
  }


  public void setLivenessProbe(V1alpha3VirtualMachineInstanceSpecLivenessProbe livenessProbe) {
    this.livenessProbe = livenessProbe;
  }


  public V1alpha3VirtualMachineInstanceSpec networks(List<V1alpha3VirtualMachineInstanceSpecNetworks> networks) {
    
    this.networks = networks;
    return this;
  }

  public V1alpha3VirtualMachineInstanceSpec addNetworksItem(V1alpha3VirtualMachineInstanceSpecNetworks networksItem) {
    if (this.networks == null) {
      this.networks = new ArrayList<>();
    }
    this.networks.add(networksItem);
    return this;
  }

   /**
   * List of networks that can be attached to a vm&#39;s virtual interface.
   * @return networks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of networks that can be attached to a vm's virtual interface.")

  public List<V1alpha3VirtualMachineInstanceSpecNetworks> getNetworks() {
    return networks;
  }


  public void setNetworks(List<V1alpha3VirtualMachineInstanceSpecNetworks> networks) {
    this.networks = networks;
  }


  public V1alpha3VirtualMachineInstanceSpec nodeSelector(Map<String, String> nodeSelector) {
    
    this.nodeSelector = nodeSelector;
    return this;
  }

  public V1alpha3VirtualMachineInstanceSpec putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node&#39;s labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
   * @return nodeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/")

  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }


  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public V1alpha3VirtualMachineInstanceSpec priorityClassName(String priorityClassName) {
    
    this.priorityClassName = priorityClassName;
    return this;
  }

   /**
   * If specified, indicates the pod&#39;s priority. If not specified, the pod priority will be default or zero if there is no default.
   * @return priorityClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.")

  public String getPriorityClassName() {
    return priorityClassName;
  }


  public void setPriorityClassName(String priorityClassName) {
    this.priorityClassName = priorityClassName;
  }


  public V1alpha3VirtualMachineInstanceSpec readinessProbe(V1alpha3VirtualMachineInstanceSpecReadinessProbe readinessProbe) {
    
    this.readinessProbe = readinessProbe;
    return this;
  }

   /**
   * Get readinessProbe
   * @return readinessProbe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha3VirtualMachineInstanceSpecReadinessProbe getReadinessProbe() {
    return readinessProbe;
  }


  public void setReadinessProbe(V1alpha3VirtualMachineInstanceSpecReadinessProbe readinessProbe) {
    this.readinessProbe = readinessProbe;
  }


  public V1alpha3VirtualMachineInstanceSpec schedulerName(String schedulerName) {
    
    this.schedulerName = schedulerName;
    return this;
  }

   /**
   * If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
   * @return schedulerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.")

  public String getSchedulerName() {
    return schedulerName;
  }


  public void setSchedulerName(String schedulerName) {
    this.schedulerName = schedulerName;
  }


  public V1alpha3VirtualMachineInstanceSpec subdomain(String subdomain) {
    
    this.subdomain = subdomain;
    return this;
  }

   /**
   * If specified, the fully qualified vmi hostname will be \&quot;&lt;hostname&gt;.&lt;subdomain&gt;.&lt;pod namespace&gt;.svc.&lt;cluster domain&gt;\&quot;. If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi, no matter if the vmi itself can pick up a hostname.
   * @return subdomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the fully qualified vmi hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi, no matter if the vmi itself can pick up a hostname.")

  public String getSubdomain() {
    return subdomain;
  }


  public void setSubdomain(String subdomain) {
    this.subdomain = subdomain;
  }


  public V1alpha3VirtualMachineInstanceSpec terminationGracePeriodSeconds(Long terminationGracePeriodSeconds) {
    
    this.terminationGracePeriodSeconds = terminationGracePeriodSeconds;
    return this;
  }

   /**
   * Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
   * @return terminationGracePeriodSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.")

  public Long getTerminationGracePeriodSeconds() {
    return terminationGracePeriodSeconds;
  }


  public void setTerminationGracePeriodSeconds(Long terminationGracePeriodSeconds) {
    this.terminationGracePeriodSeconds = terminationGracePeriodSeconds;
  }


  public V1alpha3VirtualMachineInstanceSpec tolerations(List<V1alpha3VirtualMachineInstanceSpecTolerations> tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

  public V1alpha3VirtualMachineInstanceSpec addTolerationsItem(V1alpha3VirtualMachineInstanceSpecTolerations tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * If toleration is specified, obey all the toleration rules.
   * @return tolerations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If toleration is specified, obey all the toleration rules.")

  public List<V1alpha3VirtualMachineInstanceSpecTolerations> getTolerations() {
    return tolerations;
  }


  public void setTolerations(List<V1alpha3VirtualMachineInstanceSpecTolerations> tolerations) {
    this.tolerations = tolerations;
  }


  public V1alpha3VirtualMachineInstanceSpec volumes(List<V1alpha3VirtualMachineInstanceSpecVolumes> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public V1alpha3VirtualMachineInstanceSpec addVolumesItem(V1alpha3VirtualMachineInstanceSpecVolumes volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * List of volumes that can be mounted by disks belonging to the vmi.
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of volumes that can be mounted by disks belonging to the vmi.")

  public List<V1alpha3VirtualMachineInstanceSpecVolumes> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<V1alpha3VirtualMachineInstanceSpecVolumes> volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha3VirtualMachineInstanceSpec v1alpha3VirtualMachineInstanceSpec = (V1alpha3VirtualMachineInstanceSpec) o;
    return Objects.equals(this.affinity, v1alpha3VirtualMachineInstanceSpec.affinity) &&
        Objects.equals(this.dnsConfig, v1alpha3VirtualMachineInstanceSpec.dnsConfig) &&
        Objects.equals(this.dnsPolicy, v1alpha3VirtualMachineInstanceSpec.dnsPolicy) &&
        Objects.equals(this.domain, v1alpha3VirtualMachineInstanceSpec.domain) &&
        Objects.equals(this.evictionStrategy, v1alpha3VirtualMachineInstanceSpec.evictionStrategy) &&
        Objects.equals(this.hostname, v1alpha3VirtualMachineInstanceSpec.hostname) &&
        Objects.equals(this.livenessProbe, v1alpha3VirtualMachineInstanceSpec.livenessProbe) &&
        Objects.equals(this.networks, v1alpha3VirtualMachineInstanceSpec.networks) &&
        Objects.equals(this.nodeSelector, v1alpha3VirtualMachineInstanceSpec.nodeSelector) &&
        Objects.equals(this.priorityClassName, v1alpha3VirtualMachineInstanceSpec.priorityClassName) &&
        Objects.equals(this.readinessProbe, v1alpha3VirtualMachineInstanceSpec.readinessProbe) &&
        Objects.equals(this.schedulerName, v1alpha3VirtualMachineInstanceSpec.schedulerName) &&
        Objects.equals(this.subdomain, v1alpha3VirtualMachineInstanceSpec.subdomain) &&
        Objects.equals(this.terminationGracePeriodSeconds, v1alpha3VirtualMachineInstanceSpec.terminationGracePeriodSeconds) &&
        Objects.equals(this.tolerations, v1alpha3VirtualMachineInstanceSpec.tolerations) &&
        Objects.equals(this.volumes, v1alpha3VirtualMachineInstanceSpec.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinity, dnsConfig, dnsPolicy, domain, evictionStrategy, hostname, livenessProbe, networks, nodeSelector, priorityClassName, readinessProbe, schedulerName, subdomain, terminationGracePeriodSeconds, tolerations, volumes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha3VirtualMachineInstanceSpec {\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    dnsConfig: ").append(toIndentedString(dnsConfig)).append("\n");
    sb.append("    dnsPolicy: ").append(toIndentedString(dnsPolicy)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    evictionStrategy: ").append(toIndentedString(evictionStrategy)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    livenessProbe: ").append(toIndentedString(livenessProbe)).append("\n");
    sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    priorityClassName: ").append(toIndentedString(priorityClassName)).append("\n");
    sb.append("    readinessProbe: ").append(toIndentedString(readinessProbe)).append("\n");
    sb.append("    schedulerName: ").append(toIndentedString(schedulerName)).append("\n");
    sb.append("    subdomain: ").append(toIndentedString(subdomain)).append("\n");
    sb.append("    terminationGracePeriodSeconds: ").append(toIndentedString(terminationGracePeriodSeconds)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

